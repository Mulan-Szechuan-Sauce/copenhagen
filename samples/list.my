def add1(x):
  return x + 1

debug(map([1, 2], add1))
debug(map(Nil, add1))
debug(map(Cons(1, Cons(2, Nil)), add1))
debug([1, 2, 3].foldl(0, (x, y): x + y))
debug([].foldl(0, (x, y): x + y))
debug(len([1, 2]))

def cartesian(xs, ys):
  return unwrap:
    x <- xs
    y <- ys
    wrap([x, y])

debug([1, 2, 3].cartesian([4, 5, 6]))
debug(Just(1).cartesian(Just(2)))

debug([1] + [3])
debug([1] <> [3])
debug("ye" <> "et")

debug([1, 2, 3].filter((x): x < 3))
debug([1, 2, 3].head())
debug([3].tail())
debug([1, 2, 3].reverse())
debug([3].reverse())

[1] <> wrap(3)

debug(traverse([1, 2, 3], Just))
debug(sequence([Just(1), Just(2), None]))